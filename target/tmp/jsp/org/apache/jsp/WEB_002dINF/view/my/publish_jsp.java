/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.3.7.v20160115
 * Generated at: 2019-10-26 01:50:11 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.my;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class publish_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

	request.setCharacterEncoding("UTF-8");
	String htmlData = request.getParameter("content1") != null ? request.getParameter("content1") : "";

      out.write("\r\n");
      out.write("<!doctype html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\" />\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"/resource/kindeditor/themes/default/default.css\" />\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"/resource/kindeditor/plugins/code/prettify.css\" />\r\n");
      out.write("\t<!-- jquery.validate 校验提示样式 -->\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\"\r\n");
      out.write("\thref=\"/resource/css/jquery/screen.css\">\r\n");
      out.write("<script charset=\"utf-8\"\r\n");
      out.write("\tsrc=\"/resource/kindeditor/plugins/code/prettify.js\"></script>\r\n");
      out.write("<script charset=\"utf-8\" src=\"/resource/kindeditor/kindeditor-all.js\"></script>\r\n");
      out.write("    \r\n");
      out.write("<script charset=\"utf-8\" src=\"/resource/kindeditor/lang/zh-CN.js\"></script>\r\n");
      out.write("<script src=\"/resource/js/jquery-3.2.1.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/resource/js/jquery.validate.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("\tKindEditor.ready(function(K) {\r\n");
      out.write("\t\twindow.editor1 = K.create('textarea[name=\"content1\"]', {\r\n");
      out.write("\t\t\tcssPath : '/resource/kindeditor/plugins/code/prettify.css',\r\n");
      out.write("\t\t\tuploadJson : '/resource/kindeditor/jsp/upload_json.jsp',\r\n");
      out.write("\t\t\tfileManagerJson : '/resource/kindeditor/jsp/file_manager_json.jsp',\r\n");
      out.write("\t\t\tallowFileManager : true,\r\n");
      out.write("\t\t\tafterCreate : function() {\r\n");
      out.write("\t\t\t\tvar self = this;\r\n");
      out.write("\t\t\t\tK.ctrl(document, 13, function() {\r\n");
      out.write("\t\t\t\t\tself.sync();\r\n");
      out.write("\t\t\t\t\tdocument.forms['example'].submit();\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\tK.ctrl(self.edit.doc, 13, function() {\r\n");
      out.write("\t\t\t\t\tself.sync();\r\n");
      out.write("\t\t\t\t\tdocument.forms['example'].submit();\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\tprettyPrint();\r\n");
      out.write("\t});\r\n");
      out.write("\tfunction query() {\r\n");
      out.write("\t\talert(editor1.html())\r\n");
      out.write("\t\t//alert( $(\"[name='content1']\").attr(\"src\"))\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<form id=\"form1\">\r\n");
      out.write("\r\n");
      out.write("\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t<label for=\"title\"> 文章标题:</label> <input class=\"form-control\"\r\n");
      out.write("\t\t\t\ttype=\"text\" name=\"title\" id=\"title\">\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t<label for=\"original\"> 文章来源:</label> <input class=\"form-control\"\r\n");
      out.write("\t\t\t\ttype=\"text\" name=\"original\" id=\"original\">\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t<label for=\"keywords\"> 关键词:</label> <input class=\"form-control\"\r\n");
      out.write("\t\t\t\ttype=\"text\" name=\"keywords\" id=\"keywords\">\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t<label for=\"content\"> 文章内容:</label>\r\n");
      out.write("\t\t\t<textarea rows=\"10\" cols=\"30\" name=\"content1\" id=\"content\"\r\n");
      out.write("\t\t\t\tstyle=\"width: 825px\">\r\n");
      out.write("   \r\n");
      out.write("   </textarea>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"form-group form-inline\">\r\n");
      out.write("\t\t\t栏目:<select class=\"form-control-sm\" id=\"channel\" name=\"channelId\">\r\n");
      out.write("\t\t\t\t<option value=\"-1\">请选择</option>\r\n");
      out.write("\r\n");
      out.write("\t\t\t</select> &nbsp;&nbsp; 分类:\r\n");
      out.write("\t\t\t<select class=\"form-control-sm\" id=\"category\" name=\"categoryId\">\r\n");
      out.write("\t\t\t\t<option value=\"-1\">请选择</option>\r\n");
      out.write("\t\t\t</select>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t<label for=\"content\"> 标题图片:</label> <input type=\"file\" name=\"file\" value=\"\"\r\n");
      out.write("\t\t\t\tclass=\"form-control\">\r\n");
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t<button class=\"btn btn-success\" type=\"button\" onclick=\"publish()\">发布</button>\r\n");
      out.write("\t\t\t<button class=\"btn btn-info\" type=\"reset\">重置</button>\r\n");
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</form>\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t//发布文章\r\n");
      out.write("\tfunction publish(){\r\n");
      out.write("\t\t$(\"#form1\").submit();\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("  $(function(){\r\n");
      out.write("\t  //文档就绪时加载文章栏目\r\n");
      out.write("\t  $.get(\"/channel/channels\",function(channel){\r\n");
      out.write("\t\tfor(var i in channel){\r\n");
      out.write("\t\t\t$(\"#channel\").append(\" <option value='\"+channel[i].id+\"'> \"+channel[i].name+\"</option\");\r\n");
      out.write("\t\t};\r\n");
      out.write("\t\t//为栏目绑定change事件,\r\n");
      out.write("\t\t$(\"#channel\").change(function(){\r\n");
      out.write("\t\t\t //先清空分类原有的option\r\n");
      out.write("\t\t\t  $(\"#category\").empty();\r\n");
      out.write("\t\t\t//获取当前选中的栏目ID\r\n");
      out.write("\t\t  var cid =$(this).val();\r\n");
      out.write("\t\t  //根据栏目ID 查询栏目下的分类\r\n");
      out.write("\t\t  $.get(\"/channel/selectCategorysByCid\",{cid:cid},function(categorys){\r\n");
      out.write("\t\t\t \r\n");
      out.write("\t\t\t  for(var i in categorys){\r\n");
      out.write("\t\t\t\t\t$(\"#category\").append(\" <option value='\"+categorys[i].id+\"'> \"+categorys[i].name+\"</option\");\r\n");
      out.write("\t\t\t\t};  \r\n");
      out.write("\t\t\t  \r\n");
      out.write("\t\t  })\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t\r\n");
      out.write("\t  })\r\n");
      out.write("\t  \r\n");
      out.write("\t  //\r\n");
      out.write("\t  \r\n");
      out.write("  })\r\n");
      out.write(" \r\n");
      out.write("  \r\n");
      out.write("\t//jquery前端验证\r\n");
      out.write("\t$(function(){\r\n");
      out.write("\t\t$(\"#form1\").validate({\r\n");
      out.write("\t\t\trules:{\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\ttitle:{\r\n");
      out.write("\t\t\t\t\trequired:true,\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tchannelId:{\r\n");
      out.write("\t\t\t\t\tmin:1,\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tcategoryId:{\r\n");
      out.write("\t\t\t\t\tmin:1,\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tmessages:{\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\ttitle:{\r\n");
      out.write("\t\t\t\t\trequired:\"标题不能为空\",\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tchannelId:{\r\n");
      out.write("\t\t\t\t\tmin:\"请选择栏目\",\r\n");
      out.write("\t\t\t\t},categoryId:{\r\n");
      out.write("\t\t\t\t\tmin:\"请选择分类\",\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},submitHandler: function(form) {\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t var formData = new FormData($( \"#form1\" )[0]);\r\n");
      out.write("\t\t\t\t //获取带html样式的文章内容,并封装到formData\r\n");
      out.write("\t\t\t\t formData.set(\"content\",editor1.html());\r\n");
      out.write("\t\t\t\t $.ajax({\r\n");
      out.write("\t\t\t\t\t type:\"post\",\r\n");
      out.write("\t\t\t\t\t url:\"/my/publish\",\r\n");
      out.write("\t\t\t\t\t data : formData,\r\n");
      out.write("\t\t\t\t\t// 告诉jQuery不要去处理发送的数据\r\n");
      out.write("\t\t\t\t\t processData : false,\r\n");
      out.write("\t\t\t\t\t // 告诉jQuery不要去设置Content-Type请求头\r\n");
      out.write("\t\t\t\t\t contentType : false,\r\n");
      out.write("\t\t\t\t\t success:function(flag){\r\n");
      out.write("\t\t\t\t\t\t if(flag){\r\n");
      out.write("\t\t\t\t\t\t\t alert(\"发布成功\");\r\n");
      out.write("\t\t\t\t\t\t\t location.href=\"/my\"\r\n");
      out.write("\t\t\t\t\t\t }else{\r\n");
      out.write("\t\t\t\t\t\t\t alert(\"发布失败,试试重新登录后再发布\")\r\n");
      out.write("\t\t\t\t\t\t }\r\n");
      out.write("\t\t\t\t\t }\r\n");
      out.write("\t\t\t\t\t \r\n");
      out.write("\t\t\t\t })\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t})\r\n");
      out.write("  \r\n");
      out.write("  \r\n");
      out.write("\t//jquery前端验证\r\n");
      out.write("\t$(function(){\r\n");
      out.write("\t\t$(\"#form1\").validate({\r\n");
      out.write("\t\t\trules:{\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\ttitle:{\r\n");
      out.write("\t\t\t\t\trequired:true,\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tpassword:{\r\n");
      out.write("\t\t\t\t\trequired:true,\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tmessages:{\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\ttitle:{\r\n");
      out.write("\t\t\t\t\trequired:\"标题不能为空\",\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tpassword:{\r\n");
      out.write("\t\t\t\t\trequired:\"密码不能为空\",\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t})\r\n");
      out.write("\t\r\n");
      out.write(" \r\n");
      out.write(" </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
